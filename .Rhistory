weight[[y]] / all_positions[[y]] * sum(unlist(all_positions))
})
# Run over residue type to get modified residues
out <- lapply(pmod_res[[x]], function(y) {
# Find positions of residues
positions <- all_positions[[y]]
# residues <- seq_string[[1]][positions]
pos_len <- length(positions)
# no modification site
if(pos_len == 0) return(NULL)
# getting modified sites
out <- NULL
if (pos_len > 1) {
out <- sample(
x = positions,
size = weight[[y]] *  extraDistr::rtpois(n = 1, lambda = lambda * pos_len,
a = 1, b = pos_len)
)
} else if (runif(1) < weight[[y]]) {
out <- positions
}
return(out)
})
names(out) <- pmod_res[[x]]
nummod.per.residue <- lapply(out, function(y) {
length(y)
})
return(list(modified = unlist(out), count = nummod.per.residue))
}), ptms)
# Run over modifications
out <- setNames(
lapply(ptms, function(x) {
weight <- pmod_res_distr[[x]]
names(weight) <- pmod_res[[x]]
# Old way, not sure whether necessary
# weight <- length(unlist(x[[y]])) / lengths(x[[y]]) * weight
weight[!is.finite(weight)] <- 0
# All modifiable residues
all_positions <- setNames(lapply(pmod_res[[x]], function(y) sum(y == seq_string[[1]])), pmod_res[[x]])
# Adjust by residue frequency in protein
weight <- sapply(pmod_res[[x]], function(y) {
weight[[y]] / all_positions[[y]] * sum(unlist(all_positions))
})
# Run over residue type to get modified residues
out <- lapply(pmod_res[[x]], function(y) {
# Find positions of residues
positions <- all_positions[[y]]
# residues <- seq_string[[1]][positions]
pos_len <- length(positions)
# no modification site
if(pos_len == 0) return(NULL)
# getting modified sites
out <- NULL
if (pos_len > 1) {
out <- sample(
x = positions,
size = weight[[y]] *  extraDistr::rtpois(n = 1, lambda = lambda * pos_len,
a = 1, b = pos_len)
)
} else if (runif(1) < weight[[y]]) {
out <- positions
}
return(out)
})
names(out) <- pmod_res[[x]]
nummod.per.residue <- lapply(out, function(y) {
length(y)
})
return(list(modified = unlist(out), count = nummod.per.residue))
}), ptms)
weight <- pmod_res_distr[[x]]
weight
pmod_res_distr
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite =F )
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite =F )
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite =F )
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite =F )
listall[[1]]$ModifiableResidues
listall[[2]]$ModifiableResidues
listall[[1]]$ModifiableResiduesDistr
listall[[2]]$ModifiableResiduesDistr
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite =F )
ptms_distr
Param$paramGroundTruth$PTMTypes <- list(mods1 = c("ph", "ac"))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ac=42.010565))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = list(ph=0.5, ac=0.5), m2 = list(ph=0.1, ac=0.9))
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite =F )
ptms_distr
pmod_res
Param$paramGroundTruth$ModifiableResidues
Param$paramGroundTruth$ModifiableResiduesDistr
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
ptms_distr
Param$paramGroundTruth$PTMTypesDistr
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = list(ph=0.5, ac=0.5), m2 = list(ph=0.1, ac=0.9))
Param$paramGroundTruth$PTMTypesDistr
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
devtools::load_all()
#####################
## Paths and directories
#####################
phosfake_config <- set_phosfake(fastaFilePath = system.file("Proteomes", package = "PhosFake"),
resultFilePath = "SimulatedDataSets",
cores = 1, clusterType = "PSOCK",
runStatTests = F,
calcAllBenchmarks = T
)
#####################
## Create default list of testing parameters
#####################
Param <- def_param()
# Overwrite the default values with the ones you want to test
# You can use multiple values for each parameter that then will be combined for
# all possible combinations in different simulated datasets
# Param$paramGroundTruth$PathToFasta <- "fasta_example.fasta"
# Param$paramGroundTruth$NumReps <- c(3)
# Param$paramGroundTruth$NumCond <- 5
Param$paramGroundTruth$PercExpressedProt <- 1.0
Param$paramGroundTruth$FracModProt <- 1
Param$paramGroundTruth$PTMTypes <- list(mods=c("ph", "ox"))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = c(ph=0.5, ox = 0.4))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ox = 15.994915))
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ox = c("M")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(0.04)))
Param$paramGroundTruth$PTMMultipleLambda <- c(1)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(1)))
Param$paramGroundTruth$PTMMultipleLambda <- c(1)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ox = c("M", "K")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(0.5, 0.5)))
Param$paramGroundTruth$PTMMultipleLambda <- c(1)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
Param$paramGroundTruth$PTMTypes <- list(mods1 = c("ph", "ac"))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ac=42.010565))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = list(ph=0.5, ac=0.5), m2 = list(ph=0.1, ac=0.9))
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ac=c("K", "R")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86,0.13, 0.01), ac=c(0.5, 0.5)))
Param$paramGroundTruth$PTMTypes <- list(mods1 = c("ph", "ac"))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ac=42.010565))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = list(ph=0.5, ac=0.5), m2 = list(ph=0.1, ac=0.9))
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ac=c("K", "R")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86,0.13, 0.01), ac=c(0.5, 0.5)))
Param$paramGroundTruth$PTMMultipleLambda <- c(1)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T)
devtools::load_all()
#####################
## Paths and directories
#####################
phosfake_config <- set_phosfake(fastaFilePath = system.file("Proteomes", package = "PhosFake"),
resultFilePath = "SimulatedDataSets",
cores = 1, clusterType = "PSOCK",
runStatTests = F,
calcAllBenchmarks = T
)
#####################
## Create default list of testing parameters
#####################
Param <- def_param()
# Overwrite the default values with the ones you want to test
# You can use multiple values for each parameter that then will be combined for
# all possible combinations in different simulated datasets
# Param$paramGroundTruth$PathToFasta <- "fasta_example.fasta"
# Param$paramGroundTruth$NumReps <- c(3)
# Param$paramGroundTruth$NumCond <- 5
Param$paramGroundTruth$PercExpressedProt <- 1.0
Param$paramGroundTruth$FracModProt <- 1
Param$paramGroundTruth$PTMTypes <- list(mods=c("ph", "ox"))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = c(ph=0.5, ox = 0.4))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ox = 15.994915))
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ox = c("M")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(0.04)))
Param$paramGroundTruth$PTMMultipleLambda <- c(0.5)
Param$paramGroundTruth$PTMMultipleLambda <- c(1)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T )
Param$paramGroundTruth$PTMMultipleLambda <- c(0.5)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
#####################
## Get the results of an individual simulation
#####################
res <- get_simulation(allBs[[1]]$Param, phosfake_config)
Param$paramGroundTruth$PTMTypes <- list(mods=c("ph", "ox"))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = c(ph=0.5, ox = 0.4))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ox = 15.994915))
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ox = c("M")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(0.04)))
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
#####################
## Get the results of an individual simulation
#####################
res <- get_simulation(allBs[[1]]$Param, phosfake_config)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config,overwrite=T
)
Param$paramGroundTruth$FracModProt <- 0.5
Param$paramGroundTruth$PTMTypes <- list(mods=c("ph", "ox"))
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = c(ph=0.5, ox = 0.4))
Param$paramGroundTruth$PTMTypesMass <- list(m1 = c(ph=79.966331, ox = 15.994915))
Param$paramGroundTruth$ModifiableResidues <- list(m1 = list(ph=c("S", "T", "Y"), ox = c("M")))
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(0.04)))
Param$paramGroundTruth$PTMMultipleLambda <- c(0.5)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
shiny::runApp('inst/shiny')
runApp('inst/shiny')
devtools::load_all()
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
devtools::load_all()
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite=T
)
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(1)))
Param$paramGroundTruth$PTMMultipleLambda <- c(0.5)
Param$paramGroundTruth$ModifiableResiduesDistr <- list(m1 = list(ph=c(0.86, 0.13, 0.01), ox = c(1)))
Param$paramGroundTruth$PTMMultipleLambda <- c(0.5)
Param$paramProteoformAb$QuantNoise <- c(0.5)
Param$paramDigest$EnrichmentEfficiency <- 0.8
Param$paramDigest$ModificationLoss <- 0.5
Param$paramMSRun$PercDetectedVal <- 0.9
Param$paramMSRun$PercDetectability <- 0.8
Param$paramMSRun$WrongLocalizations <- 0.1
Param$paramMSRun$WrongIDs <- 0
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
Param$paramGroundTruth$PTMTypesDistr <- list(m1 = c(ph=0.5, ox = 0.04))
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
runApp('inst/shiny')
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config)
#####################
## Run the simulations
#####################
allBs <- run_sims(Param, phosfake_config, overwrite = T)
runApp('inst/shiny')
shiny::runApp('inst/shiny')
package_version("vsclust")
package_version("PolySTest")
package_version()
?package_version
packageVersion("vsclust")
packageVersion("vsclus")
runApp('inst/shiny')
shiny::runApp('inst/shiny')
devtools::load_all()
runApp('inst/shiny')
devtools::load_all()
# Configure the paths and settings
proteomaker_config <- set_proteomaker(
# Default path to the Proteomes folder in the ProteoMaker package
fastaFilePath =  system.file("Proteomes", package = "ProteoMaker"),
# Default path to the temporary directory
resultFilePath = paste0(tempdir(), "/SimulatedDataSets"),
# Increase to the number of cores you want to use.
# Large numbers can lead to considerably higher RAM usage
cores = 1,
# Should work on all operation systems. If you have problems, try "FORK" instead
clusterType = "PSOCK",
# Run statistical tests on the simulated data to compare ground truth with simulated values
runStatTests = TRUE,
# Calculate all benchmarks for the simulated data
calcAllBenchmarks = TRUE
)
# Generate default parameters
Param <- def_param()
# Generate default parameters
Param <- def_param()
# Example of overwriting default values
Param$paramGroundTruth$PathToFasta <- "fasta_example.fasta"
# Example of overwriting default values
Param$paramGroundTruth$PathToFasta <- "fasta_example.fasta"
Param$paramGroundTruth$PercExpressedProt <- 1.0
# Param$paramGroundTruth$NumReps <- c(3)
# Param$paramGroundTruth$NumCond <- 5
# Param$paramGroundTruth$FracModProt <- 0.5
# Param$paramGroundTruth$PTMTypes <- "ph"
# Param$paramGroundTruth$PTMTypesMass <- c(79.966331)
# Param$paramGroundTruth$PTMTypesDist <- c(1)
# Param$paramGroundTruth$PTMMultipleLambda <- c(0.1)
# Param$paramGroundTruth$ModifiableResidues <- list(c("S", "T", "Y"))
# Param$paramGroundTruth$ModifiableResiduesDistr <- list(c(0.86,0.13, 0.01))
Param$paramGroundTruth$NumReps <- c(3:5)
# Param$paramGroundTruth$NumReps <- c(3)
# Param$paramGroundTruth$NumCond <- 5
# Param$paramGroundTruth$FracModProt <- 0.5
# Param$paramGroundTruth$PTMTypes <- "ph"
# Param$paramGroundTruth$PTMTypesMass <- c(79.966331)
# Param$paramGroundTruth$PTMTypesDist <- c(1)
# Param$paramGroundTruth$PTMMultipleLambda <- c(0.1)
# Param$paramGroundTruth$ModifiableResidues <- list(c("S", "T", "Y"))
# Param$paramGroundTruth$ModifiableResiduesDistr <- list(c(0.86,0.13, 0.01))
Param$paramGroundTruth$NumReps <- c(3:5)
# Run the simulations
allBs <- run_sims(Param, proteomaker_config)
# Retrieve results}
res <- get_simulation(allBs[[1]]$Param, proteomaker_config)
res$Param
?get_simulation
